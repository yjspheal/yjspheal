name: Profile 3d grass and snake   # 워크플로 이름

on:
  schedule:
    - cron: "0 */6 * * *"          # (UTC) 6시간마다 실행
  workflow_dispatch:                # 수동 실행

permissions:
  contents: write                   # output 브랜치 푸시 권한

jobs:
  build:
    runs-on: ubuntu-latest          # 최신 Ubuntu 러너

    steps:
      # 0) 저장소 체크아웃 (반드시 먼저!)
      - name: Checkout repo         # git 명령이 .git 디렉토리를 필요로 함
        uses: actions/checkout@v4

      # 1) 최근 6시간 내 master 커밋 유무 점검 (없으면 이후 스텝을 스킵하기 위해 출력값 설정)
      - name: Check commits within last 6 hours on master
        id: check
        run: |
          git fetch origin master --depth=1                      # 최신 커밋만 가볍게 가져오기
          COUNT=$(git log origin/master --since='6 hours ago' --oneline | wc -l | tr -d ' ')
          echo "commit_count=$COUNT" >> "$GITHUB_OUTPUT"         # 출력값 노출

      # 1-1) 커밋 없으면 깔끔히 종료(성공). -> 실패 메일 안 감.
      - name: No recent commits, skip the run
        if: ${{ steps.check.outputs.commit_count == '0' }}
        run: |
          echo "No commits on master in the last 6 hours. Exiting successfully."
          exit 0

      # 2) dist 폴더 준비
      - name: Prepare dist folder
        if: ${{ steps.check.outputs.commit_count != '0' }}       # 커밋 있을 때만 실행
        run: mkdir -p dist

      # 3) 입체 잔디 생성
      - name: Generate 3d grass
        if: ${{ steps.check.outputs.commit_count != '0' }}
        uses: lowlighter/metrics@latest
        with:
          user: najung-h
          token: ${{ secrets.METRICS_TOKEN }}    # PAT 필요(레포/스코프 주의)
          template: classic
          filename: dist/metrics-6m.svg
          base: ""
          config_timezone: Asia/Seoul
          plugin_isocalendar: yes
          plugin_isocalendar_duration: half-year

      # 4) 뱀 생성
      - name: Generate snake
        if: ${{ steps.check.outputs.commit_count != '0' }}
        uses: Platane/snk@v3
        id: snake-gif
        with:
          github_user_name: najung-h
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif

      # 5) 상태 확인(옵션)
      - name: Git status
        if: ${{ steps.check.outputs.commit_count != '0' }}
        run: git status

      # 6) 산출물 목록(옵션)
      - name: List dist
        if: ${{ steps.check.outputs.commit_count != '0' }}
        run: ls -alh dist || true

      # 7) output 브랜치로 배포
      - name: Deploy profile assets to output branch
        if: ${{ steps.check.outputs.commit_count != '0' }}
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: output
          build_dir: dist
          commit_message: "chore: update profile assets"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8) master에도 동기화
      - name: Commit dist to default branch
        if: ${{ steps.check.outputs.commit_count != '0' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: sync dist assets to default branch"
          branch: master
          file_pattern: dist/**

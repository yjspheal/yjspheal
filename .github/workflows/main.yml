name: Profile 3d grass and snake

on:
  schedule:
    - cron: "0 */6 * * *"   # (UTC) 6시간마다 실행
  workflow_dispatch:         # 수동 실행

# output 브랜치로 푸시하려면 repo 컨텐츠 쓰기 권한이 필요
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) 저장소 체크아웃
      - name: Checkout repo
        uses: actions/checkout@v4

      # 1-1) dist 폴더 미리 생성 (중요!)
      - name: Prepare dist folder
        run: mkdir -p dist

      # 2) 입체 잔디 생성
      - name: Generate 3d grass
        uses: lowlighter/metrics@latest
        with:
          user: yjspheal
          token: ${{ secrets.METRICS_TOKEN }}  # PAT 필요
          template: classic
          filename: dist/metrics-6m.svg   # dist 폴더에 저장
          base: ""
          config_timezone: Asia/Seoul
          plugin_isocalendar: yes
          plugin_isocalendar_duration: half-year

      # 3) 뱀 생성 
      - name: Generate snake
        uses: Platane/snk@v3
        id: snake-gif
        with:
          github_user_name: yjspheal
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif

      # 상태 확인
      - name: Git status
        run: git status

      # 생성물 확인(옵션)
      - name: List dist
        run: ls -alh dist || true


      # 4) dist/ 를 output 브랜치로 배포
      - name: Deploy profile assets to output branch
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: output
          build_dir: dist
          commit_message: "chore: update profile assets"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 5) 동일 산출물을 기본 브랜치(master)의 dist/에도 커밋 (README가 master를 가리켜도 OK)
      - name: Commit dist to default branch
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: sync dist assets to default branch"
          branch: master   # 기본 브랜치가 main이면 main으로 변경
          file_pattern: dist/**
